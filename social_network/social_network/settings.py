"""
Django settings for social_network project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""


from pathlib import Path
import os, sys
# import environ

# env = environ.Env()
# environ.Env.read_env(env_file=Path('./docker/env/.env.dev'))

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
PROJECT_ROOT = Path(__file__).parent.parent
sys.path.append(str(PROJECT_ROOT / 'apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = env('SECRET_KEY')
SECRET_KEY = 'django-insecure-=2#(c!ojl3^elc3w90tb^884+aw%ajo=zrb%wzl**(r8y51=@a'

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = int(env('DEBUG', default=1))
DEBUG = True
# ALLOWED_HOSTS = env('ALLOWED_HOSTS').split()
ALLOWED_HOSTS = []


# CSRF_TRUSTED_ORIGINS = env('CSRF_TRUSTED_ORIGINS').split()

X_FRAME_OPTIONS = 'SAMEORIGIN'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'compressor',
    
    'posts.apps.PostsConfig',
    'profiles.apps.ProfilesConfig',
    'category.apps.CategoryConfig',
    'register.apps.RegisterConfig',
    'login.apps.LoginConfig',
    'comments.apps.CommentsConfig',
    'gallery.apps.GalleryConfig',
    'phonebook.apps.PhonebookConfig',
    'minio_storage',
    
    

]   

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.common.CommonMiddleware',
]
CORS_ORIGIN_ALLOW_ALL = True
ROOT_URLCONF = 'social_network.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'social_network.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
# DATABASES = {

#     'default': {

#         'ENGINE': 'django.db.backends.postgresql',

#         'NAME': env('POSTGRES_DB'),

#         'USER': env('POSTGRES_USER'),

#         'PASSWORD': env('POSTGRES_PASSWORD'),

#         'HOST': env('POSTGRES_HOST'),

#         'PORT': env('POSTGRES_PORT'),

#     }

# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Другие параметры




# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    # {
    #     'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    # },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_TZ = True

AUTH_USER_MODEL = 'profiles.User'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'app/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static') 
STATIC_DIRS = []

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

COMPRESS_ROOT = BASE_DIR / 'static'

COMPRESS_ENABLED = True

STATICFILES_FINDERS = ('compressor.finders.CompressorFinder',)

# Параметры хранилища файлов
# DEFAULT_FILE_STORAGE = env('DEFAULT_FILE_STORAGE')
# AWS_STORAGE_BUCKET_NAME = env('AWS_STORAGE_BUCKET_NAME')
# AWS_ACCESS_KEY_ID = env('AWS_ACCESS_KEY_ID')
# AWS_SECRET_ACCESS_KEY = env('AWS_SECRET_ACCESS_KEY')
# AWS_S3_ENDPOINT_URL = env('AWS_S3_ENDPOINT_URL')
# DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
# AWS_STORAGE_BUCKET_NAME = 'storage'
# AWS_ACCESS_KEY_ID = 'admin'
# AWS_SECRET_ACCESS_KEY = 'password'
# AWS_S3_ENDPOINT_URL = 'http://localhost:9000/'

# DEFAULT_FILE_STORAGE = env('DEFAULT_FILE_STORAGE')
# MINIO_STORAGE_ENDPOINT = env('MINIO_STORAGE_ENDPOINT')
# MINIO_STORAGE_ACCESS_KEY = env('MINIO_STORAGE_ACCESS_KEY')
# MINIO_STORAGE_SECRET_KEY = env('MINIO_STORAGE_SECRET_KEY')
# MINIO_STORAGE_USE_HTTPS = env('MINIO_STORAGE_USE_HTTPS')
# # MINIO_STORAGE_MEDIA_OBJECT_METADATA = env('MINIO_STORAGE_MEDIA_OBJECT_METADATA')
# MINIO_STORAGE_MEDIA_BUCKET_NAME = env('MINIO_STORAGE_MEDIA_BUCKET_NAME')
# MINIO_STORAGE_AUTO_CREATE_MEDIA_BUCKET = env('MINIO_STORAGE_AUTO_CREATE_MEDIA_BUCKET')
